{"version":3,"sources":["../src/app.js"],"names":["Ariel","setListeners","screen","document","querySelector","message","input","microphone","container","selfie","window","addEventListener","event","preventDefault","target","style","cssText","getSpeech","keyCode","which","sendMessage","value","msg","JSON","parse","listNode","i","li","createElement","img","a","p","innerHTML","href","src","appendChild","h3","ul","speechBubbles","querySelectorAll","recognition","webkitSpeechRecognition","onresult","results","sendSpeech","start","createTextNode","json","stringify","console","log","xhr","XMLHttpRequest","url","open","setRequestHeader","onreadystatechange","readyState","status","sendResponse","responseText","send","ariel"],"mappings":"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","file":"app.js","sourcesContent":["class Ariel {\n  constructor() {\n    this.setListeners();\n  }\n  setListeners() {\n    const screen = document.querySelector('.screen');\n    const message = document.querySelector('.message');\n    const input = document.querySelector('.message__input');\n    const microphone = document.querySelector('.message__speech');\n    const container = document.querySelector('.screen__container--listen');\n\n    let selfie = this;\n\n    window.addEventListener('touchstart', (event) => {\n      event.preventDefault();\n\n      if (event.target === microphone) {\n        screen.style.cssText = 'background: linear-gradient(#1EC7AC, #3AB8C8)';\n        container.style.cssText = 'display: table';\n        selfie.getSpeech();\n      }\n    });\n\n    window.addEventListener('touchend', (event) => {\n      event.preventDefault();\n\n      if (event.target === microphone) {\n        screen.style.cssText = 'background: #EBEDF1';\n        container.style.cssText = 'display: none';\n      }\n    });\n\n    window.addEventListener('keyup', function(event) {\n      event.preventDefault();\n\n      if (event.keyCode === 13 || event.which === 13) {\n        selfie.sendMessage(input.value);\n        input.value = '';\n      }\n    });\n  }\n  sendResponse(msg) {\n    msg = JSON.parse(msg);\n\n    const listNode = document.querySelector('.screen__container--messages');\n\n    msg = msg[\"data\"][1];\n\n    for (let i = 0; i < 4; ++i) {\n      const li = document.createElement('LI'),\n\t\t        img = document.createElement('IMG'),\n\t\t        a = document.createElement('A'),\n\t\t        p = document.createElement('P');\n\n      p.innerHTML = msg[i][0];\n      a.href = msg[i][1];\n      img.src = msg[i][2];\n\n      li.appendChild(img);\n      li.appendChild(h3);\n      li.appendChild(p);\n\n      ul.appendChild(li);\n    }\n  }\n  getSpeech() {\n    const speechBubbles = document.querySelectorAll('.screen__container--listen > span');\n\n    speechBubbles[0].style.cssText = 'animation: sound-1 1.4s infinite';\n    speechBubbles[1].style.cssText = 'animation: sound-2 1.4s infinite';\n    speechBubbles[2].style.cssText = 'animation: sound-1 1.4s infinite';\n    speechBubbles[3].style.cssText = 'animation: sound-2 1.4s infinite';\n\n    let recognition = new webkitSpeechRecognition(),\n      selfie = this;\n    recognition.onresult = function(event) {\n      selfie.sendMessage(event.results[0][0]['transcript']);\n      selfie.sendSpeech(event.results[0][0]['transcript']);\n    }\n    recognition.start();\n\n  }\n  sendMessage(msg) {\n    const listNode = document.querySelector('.screen__container--messages');\n    const li = document.createElement(\"li\");\n\n    li.appendChild(document.createTextNode(msg));\n\n    listNode.appendChild(li);\n  }\n  sendSpeech(msg) {\n    const json = JSON.stringify({ \"response\": msg });\n    console.log(json);\n\n    let xhr = new XMLHttpRequest(),\n      url = 'https://127.0.0.1:5000/',\n      selfie = this;\n\n    xhr.open('POST', url, true);\n\n    xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        selfie.sendResponse(xhr.responseText);\n      }\n    }\n\n    xhr.send(json);\n  }\n}\n\n\n(function() {\n  var ariel = new Ariel;\n})();\n"]}