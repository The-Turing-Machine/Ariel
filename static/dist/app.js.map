{"version":3,"sources":["../src/app.js"],"names":["Ariel","setListeners","getInputValue","input","document","querySelector","selfie","window","addEventListener","event","preventDefault","keyCode","which","sendMessage","value","screen","message","microphone","container","target","style","cssText","getSpeech","speechBubbles","querySelectorAll","recognition","webkitSpeechRecognition","onresult","sendSpeech","results","start","msg","listNode","li","createElement","appendChild","createTextNode","json","JSON","stringify","console","log","xhr","XMLHttpRequest","url","open","setRequestHeader","onreadystatechange","readyState","status","responseText","send","ariel"],"mappings":"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","file":"app.js","sourcesContent":["class Ariel {\n  constructor() {\n    this.setListeners();\n    this.getInputValue();\n  }\n  getInputValue() {\n  \tconst input = document.querySelector('.message__input');\n  \tlet selfie = this;\n  \twindow.addEventListener('keydown', function(event){\n  \t\tevent.preventDefault();\n\n  \t\tif(event.keyCode === 13 || event.which === 13) {\n  \t\t\tselfie.sendMessage(input.value);\n  \t\t}\n  \t});\n  }\n  setListeners() {\n  \tconst screen = document.querySelector('.screen');\n    const message = document.querySelector('.message');\n    const input = document.querySelector('.message__input');\n    const microphone = document.querySelector('.message__speech');\n    const container = document.querySelector('.screen__container--listen');\n\n    window.addEventListener('touchstart', (event) => {\n      event.preventDefault();\n\n      if (event.target === microphone) {\n      \tscreen.style.cssText = 'background: linear-gradient(#1EC7AC, #3AB8C8)';\n        container.style.cssText = 'display: table';\n        this.getSpeech();\n      }\n    });\n\n    window.addEventListener('touchend', (event) => {\n      event.preventDefault();\n\n      if (event.target === microphone) {\n      \tscreen.style.cssText = 'background: #EBEDF1';\n        container.style.cssText = 'display: none';\n      }\n    });\n  }\n\n  getSpeech() {\n    const speechBubbles = document.querySelectorAll('.screen__container--listen > span');\n\n    speechBubbles[0].style.cssText = 'animation: sound-1 1.4s infinite';\n    speechBubbles[1].style.cssText = 'animation: sound-2 1.4s infinite';\n    speechBubbles[2].style.cssText = 'animation: sound-1 1.4s infinite';\n    speechBubbles[3].style.cssText = 'animation: sound-2 1.4s infinite';\n\n    let recognition = new webkitSpeechRecognition(),\n    \t\tselfie = this;\n    recognition.onresult = function(event) {\n      selfie.sendSpeech(event.results[0][0]['transcript']);\n    }\n    recognition.start();\n\n  }\n  sendMessage(msg) {\n  \tconst listNode = document.querySelector('.screen__container--messages');\n  \tconst li = document.createElement(\"li\");\n\n  \tli.appendChild(document.createTextNode(msg));\n\n  \tlistNode.appendChild(li);\n  }\n  sendSpeech(msg) {\n    const json = JSON.stringify({ \"response\":  msg });\n    console.log(json);\n\n    let xhr = new XMLHttpRequest(),\n      url = 'https://10.1.1.142:5000/';\n\n    xhr.open('POST', url, true);\n\n    xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        console.log(xhr.responseText);\n      }\n    }\n\n    xhr.send(json);\n  }\n}\n\n\n(function() {\n  var ariel = new Ariel;\n})();\n"]}